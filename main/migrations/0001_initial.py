# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-07-23 07:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
                ('description', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'about',
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('call_for_paper_deadline', models.DateTimeField()),
                ('key_speakers', models.TextField(blank=True, null=True)),
                ('source', models.TextField()),
                ('ranking', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'conference',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'expense',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'fee',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department', to='main.Department')),
            ],
            options={
                'db_table': 'field',
            },
        ),
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'grant',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('function', models.CharField(max_length=100)),
                ('expectations', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'job',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('minimum', models.CharField(max_length=100)),
                ('preferred', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'qualifications',
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('amount', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'salary',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('description', models.CharField(max_length=100)),
                ('related_conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_conferences', to='main.Conference')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('funding', models.FloatField(blank=True, null=True)),
                ('number_of_positions', models.IntegerField(default=0)),
                ('deadline', models.DateTimeField()),
                ('scholarship_maintenance_criteria', models.CharField(blank=True, max_length=100, null=True)),
                ('perks_offered', models.CharField(max_length=150)),
                ('source', models.TextField()),
                ('amount_granted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grant', to='main.Grant')),
            ],
            options={
                'db_table': 'scholarship',
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=40)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'specialization',
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'sponsor',
            },
        ),
        migrations.CreateModel(
            name='StudentPosition',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('experience_required', models.CharField(max_length=20)),
                ('deadline', models.DateTimeField()),
                ('source', models.TextField()),
                ('contacts', models.ManyToManyField(to='main.Contact')),
            ],
            options={
                'db_table': 'student_job_position',
            },
        ),
        migrations.CreateModel(
            name='SubmissionForm',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=30)),
                ('required_docs', models.CharField(max_length=200)),
                ('steps_to_apply', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'submission_form',
            },
        ),
        migrations.CreateModel(
            name='Tenure',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField()),
                ('duration', models.DurationField()),
            ],
            options={
                'db_table': 'tenure',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=20)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.User')),
                ('expertise', models.ManyToManyField(related_name='expertise', to='main.Specialization')),
                ('related_university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_university', to='main.Location')),
            ],
            options={
                'db_table': 'professor',
            },
            bases=('main.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.User')),
                ('experience', models.FloatField(default=1.0)),
                ('skills', models.ManyToManyField(related_name='skills', to='main.Specialization')),
            ],
            options={
                'db_table': 'student',
            },
            bases=('main.user',),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='duration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_duration', to='main.Tenure'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='fee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submission_fee', to='main.Fee'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='job',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='offered_job', to='main.Job'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='job_location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue', to='main.Location'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='requirements',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria', to='main.Qualifications'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='salary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='income', to='main.Salary'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='skills_covered',
            field=models.ManyToManyField(to='main.Specialization'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='submission_form',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='application_form', to='main.SubmissionForm'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='application_form',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='submission_form', to='main.SubmissionForm'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='contacts',
            field=models.ManyToManyField(related_name='contact_information', to='main.Contact'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='criteria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='main.Qualifications'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='duration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scholarship_duration', to='main.Tenure'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='fields_of_interest',
            field=models.ManyToManyField(related_name='competencies', to='main.Specialization'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='host_universities',
            field=models.ManyToManyField(related_name='host_regions', to='main.Location'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='information',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='about_scholarship', to='main.About'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='sponsors',
            field=models.ManyToManyField(related_name='funders', to='main.Sponsor'),
        ),
        migrations.AddField(
            model_name='department',
            name='university',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='university', to='main.Location'),
        ),
        migrations.AddField(
            model_name='conference',
            name='conference_venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Location'),
        ),
        migrations.AddField(
            model_name='conference',
            name='contacts',
            field=models.ManyToManyField(to='main.Contact'),
        ),
        migrations.AddField(
            model_name='conference',
            name='covered_expenses',
            field=models.ManyToManyField(related_name='covered_expenses', to='main.Expense'),
        ),
        migrations.AddField(
            model_name='conference',
            name='duration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conference_duration', to='main.Tenure'),
        ),
        migrations.AddField(
            model_name='conference',
            name='fields_of_interest',
            field=models.ManyToManyField(related_name='interests', to='main.Specialization'),
        ),
        migrations.AddField(
            model_name='conference',
            name='info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conference_information', to='main.About'),
        ),
        migrations.AddField(
            model_name='conference',
            name='sponsors',
            field=models.ManyToManyField(related_name='organizers', to='main.Sponsor'),
        ),
        migrations.AddField(
            model_name='studentposition',
            name='job_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Professor'),
        ),
    ]
